{"version":3,"sources":["webpack:///./frontend/components/files/documents/upload.jsx"],"names":["UploadForm","props","state","title","description","thumbnail_url","file","undefined","handleSubmit","bind","handleFile","e","preventDefault","formData","FormData","append","user_id","processForm","field","setState","currentTarget","value","files","fileReader","FileReader","onloadend","result","readAsDataURL","update","name","React","Component","mapStateToProps","session","id","mapDispatchToProps","dispatch","ownProps","document","createDocument","withRouter","connect"],"mappings":"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","file":"6.bundle.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport SideBar from \"../../ui/sidebar\";\nimport { createDocument } from \"../../../actions/document_actions\";\nimport { Route, Redirect, withRouter } from \"react-router-dom\";\n\nclass UploadForm extends React.Component {\n  constructor(props) {\n    super(props);\n    // this.props.history.push(\"/upload\");\n    this.state = {\n      title: \"\",\n      description: \"\",\n      // format: \"pdf\",\n      thumbnail_url:\n        \"https://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Document_icon_%28the_Noun_Project_27904%29.svg/768px-Document_icon_%28the_Noun_Project_27904%29.svg.png\",\n      file: undefined\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFile = this.handleFile.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    // Must use FormData when uploading file\n    const formData = new FormData();\n    formData.append(\"document[title]\", this.state.title);\n    formData.append(\"document[user_id]\", this.props.user_id);\n    formData.append(\"document[file]\", this.state.file);\n    formData.append(\"document[description]\", this.state.description);\n\n    // Redirect to documents page on success\n    this.props\n      .processForm(formData)\n      // .then(() => this.props.history.push(\"/documents\"));\n  }\n\n  update(field) {\n    return (e) =>\n      this.setState({\n        [field]: e.currentTarget.value,\n      });\n  }\n\n  handleFile(e) {\n    const file = e.currentTarget.files[0];\n    const fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      this.setState({ file: file, thumbnail_url: fileReader.result });\n    };\n    if (file) {\n      fileReader.readAsDataURL(file);\n    } else {\n      this.setState({ thumbnail_url: \"\", file: null });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"upload-form-component\">\n        <SideBar showSidebar={true} />\n        <div className=\"upload-form-div\">\n          <div className=\"page-header\">\n            <h1>Publish to the world</h1>\n          </div>\n          <div className=\"upload-page-subheader\">\n            <span>\n              Presentations, research papers, legal documents, and more\n            </span>\n          </div>\n          <div className=\"upload-form-container\">\n            <div className=\"thumbnail-container\">\n              <img src={this.state.thumbnail_url} />\n            </div>\n            <form className=\"upload-form\" onSubmit={this.handleSubmit}>\n              <div className=\"input-container\">\n                <div className=\"label-contain\">\n                  <label>Title</label>\n                  <span className=\"req\">(Required)</span>\n                </div>\n\n                <input\n                  id=\"title-input\"\n                  type=\"text\"\n                  value={this.state.title}\n                  onChange={this.update(\"title\")}\n                  className=\"upload-input\"\n                  autoComplete=\"off\"\n                />\n              </div>\n              <div className=\"input-container\">\n                <div className=\"label-contain\">\n                  <label>Description</label>\n                  <span className=\"req\">(Required)</span>\n                </div>\n\n                <textarea\n                  id=\"description-input\"\n                  value={this.state.description}\n                  onChange={this.update(\"description\")}\n                  className=\"upload-input\"\n                />\n              </div>\n              <div className=\"input-container\" id=\"file-contain\">\n                <label>File</label>\n                <input type=\"file\" id=\"file\" onChange={this.handleFile} />\n                <button id=\"file-btn\">\n                  {this.state.file\n                    ? `${this.state.file.name} âœ“`\n                    : \"Select a file to upload\"}\n                </button>\n              </div>\n              <button className=\"submit-btn\" type=\"submit\">\n                Upload\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ session }) => ({\n  user_id: session.id,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  processForm: (document) => dispatch(createDocument(document)),\n});\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(UploadForm)\n);\n"],"sourceRoot":""}